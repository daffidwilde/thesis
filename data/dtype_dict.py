""" A script to hold and write our datatype dictionary. """

import json

dtype_dict = {
    'INTERNAL_ID': 'object', 'TRUST': 'category', 'DUMMY_TRUST': 'category',
    'BENCH_PERIOD': 'object', 'EPISODE_ID': 'object', 'SPELL_ID': 'object',
    'SPECIALTY': 'category', 'POD': 'category', 'HRG': 'category',
    'HRG_SPELL': 'category', 'PCT': 'category', 'pasid': 'object',
    'consultant': 'category', 'ICD10': 'category', 'OPCS4': 'category',
    'DOM_PROC': 'category', 'Dayofweek': 'category', 'PERIOD': 'object',
    'Age': 'int', 'LOS': 'int', 'TH_TIME': 'int', 'ACTIVITY': 'category',
    'MFF': 'category', 'COST': 'float', 'NetCost': 'float',
    'practice_code': 'category', 'DIRECT': 'float', 'INDIRECT': 'float',
    'OVERHEAD': 'float', 'CRIT': 'float', 'EMER': 'float', 'IMG': 'float',
    'MED': 'float', 'NCI': 'float', 'NID': 'float', 'OPTH': 'float',
    'OTH': 'float', 'OUTP': 'float', 'PATH': 'float', 'PHAR': 'float',
    'PROS': 'float', 'SPS': 'float', 'THER': 'float', 'WARD': 'float',
    'BLD': 'float', 'ENDO': 'float', 'OCLST': 'float', 'OVH': 'float',
    'RADTH': 'float', 'HCD': 'float', 'CNST': 'float', 'INCOME': 'float',
    'SPELL_FLG': 'category', 'SPELL_LOS': 'int', 'SPELL_EBD': 'object',
    'SPELL_EBD_COST': 'float', 'REF_TYPE': 'object', 'OPCS_1': 'category',
    'OPCS_2': 'category', 'OPCS_3': 'category', 'OPCS_4': 'category',
    'OPCS_5': 'category', 'OPCS_6': 'category', 'OPCS_7': 'category',
    'OPCS_8': 'category', 'OPCS_9': 'category', 'OPCS_10': 'category',
    'OPCS_11': 'category', 'OPCS_12': 'category', 'OPCS_13': 'category',
    'ICD_1': 'category', 'ICD_2': 'category', 'ICD_3': 'category',
    'ICD_4': 'category', 'ICD_5': 'category', 'ICD_6': 'category',
    'ICD_7': 'category', 'ICD_8': 'category', 'ICD_9': 'category',
    'ICD_10': 'category', 'ICD_11': 'category', 'ICD_12': 'category',
    'ICD_13': 'category', 'PROC_NO_WEI': 'int', 'DIAG_NO_WEI': 'int',
    'PROC_NO': 'int', 'DIAG_NO': 'int', 'ACUITY': 'object', 'SSC': 'category',
    'SPELL_WARD': 'category', 'EPISODE_ST': 'object', 'EPISODE_END': 'object',
    'COND_FLG': 'object', 'SIGN_SYMPTOM': 'category', '2x': 'category',
    '5x': 'category', '10x': 'category', '100x': 'category', 'DRUG': 'float',
    'SECC': 'float', 'ADMDATE': 'object', 'DISCDATE': 'object', 'CC_LOS': 'int',
    'SS_CODE': 'category', 'OPCS_MAX_LEVEL': 'object', 'DOM_LEVEL': 'object',
    'ADM_MET': 'category', 'DIS_MET': 'category', 'DIS_DES': 'category',
    'SEX': 'category', 'HRG_RC': 'category', 'HRG_SPELL_RC': 'category',
    'NON_NHS_FLG': 'category', 'WIP_FLG': 'category', 'MAIN_SPEC': 'category',
    'ADM_SOU': 'category', 'ENDO_TIME': 'int', 'NPCA': 'object',
    'IMG_MED': 'float', 'IMG_OTH': 'float', 'PATH_MED': 'float',
    'PATH_OTH': 'float', 'OTH_MED': 'float', 'OTH_OTH': 'float',
    'DRUG_CHEMO': 'float', 'procedure_date_dt': 'object',
    'procedure_code': 'category', 'DayofMainProc': 'category',
    'start_ward': 'category', 'end_ward': 'category', 'MFFT_Delay_Days': 'int',
    'site': 'category', 'south_north': 'category', 'Programme_1': 'category',
    'Programme_2': 'category', 'Programme_3': 'category',
    'Programme_4': 'category', 'Programme_5': 'category',
    'Programme_6': 'category', 'Programme_7': 'category',
    'Programme_8': 'category', 'Programme_9': 'category',
    'Programme_10': 'category', 'Programme_11': 'category',
    'Programme_12': 'category', 'Programme_13': 'category', 'DC': 'category',
    'NE': 'category', 'EL': 'category', 'HIVPrim': 'category',
    'HIVSec': 'category', 'InfPrim': 'category', 'InfSec': 'category',
    'CancerPrim': 'category', 'CancerSec': 'category', 'BldPrim': 'category',
    'BldSec': 'category', 'DiabetesPrim': 'category', 'DiabetesSec': 'category',
    'EndocPrim': 'category', 'EndocSec': 'category',
    'OtherEndocPrim': 'category', 'OtherEndocSec': 'category',
    'MentalHealthPrim': 'category', 'MentalHealthSec': 'category',
    'LDPrim': 'category', 'LDSec': 'category', 'ChronPainPrim': 'category',
    'ChronPainSec': 'category', 'NeuroPrim': 'category', 'NeuroSec': 'category',
    'VisionPrim': 'category', 'VisionSec': 'category', 'HearPrim': 'category',
    'HearSec': 'category', 'CHDPrim': 'category', 'CHDSec': 'category',
    'CerebrovascularPrim': 'category', 'CerebrovascularSec': 'category',
    'RhythmPrim': 'category', 'RhythmSec': 'category',
    'OthCircPrim': 'category', 'OthCircSec': 'category',
    'ObstructiveAirwaysDiseasePrim': 'category',
    'ObstructiveAirwaysDiseaseSec': 'category', 'AsthmaPrim': 'category',
    'AsthmaSec': 'category', 'OtherRespPrim': 'category',
    'OtherRespSec': 'category', 'DentPrim': 'category', 'DentSec': 'category',
    'GastroPrim': 'category', 'GastroSec': 'category', 'BurnsPrim': 'category',
    'BurnsSec': 'category', 'SkinPrim': 'category', 'SkinSec': 'category',
    'MSKPrim': 'category', 'MSKSec': 'category', 'TrInjPrim': 'category',
    'TrInjSec': 'category', 'GenTctPrim': 'category', 'GenTctSec': 'category',
    'RenalPrim': 'category', 'RenalSec': 'category', 'STDPrim': 'category',
    'STDSec': 'category', 'GUPrim': 'category', 'GUSec': 'category',
    'MatRepPrim': 'category', 'MatRepSec': 'category', 'NeoNatPrim': 'category',
    'NeoNatSec': 'category', 'UnintPrim': 'category', 'UnintSec': 'category',
    'PoisenPrim': 'category', 'PoisenSec': 'category',
    'PoisAdvPr)m': 'category', 'PoisAdvSec': 'category', 'AMIPrim': 'int',
    'AMISec': 'int', 'CVAPrim': 'int', 'CVASec': 'int', 'CHFPrim': 'int',
    'CHFSec': 'int', 'CTDPrim': 'int', 'CTDSec': 'int', 'DemPrim': 'int',
    'DemSec': 'int', 'DiabPrim': 'int', 'DiabSec': 'int', 'LD_Prim': 'int',
    'LD_Sec': 'int', 'PUPrim': 'int', 'PUSec': 'int', 'PVDPrim': 'int',
    'PVDSec': 'int', 'PDPrim': 'int', 'PDSec': 'int', 'CanPrim': 'int',
    'CanSec': 'int', 'DiabcompPrim': 'int', 'DiabcompSec': 'int',
    'ParPrim': 'int', 'ParSec': 'int', 'RDPrim': 'int', 'RDSec': 'int',
    'MetCancPrim': 'int', 'MetCancSec': 'int', 'SLDPrim': 'int',
    'SLDSec': 'int', 'HIV_Prim': 'int', 'HIV_Sec': 'int',
    'C_DIFF': 'category', 'MRSA': 'category', 'Obese': 'category'
}

with open('dtype_dict.json', 'w') as f:
    json.dump(dtype_dict, f)
